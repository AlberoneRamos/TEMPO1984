{"version":3,"sources":["assets/loading.gif","components/NavigationBar.js","assets/Header.js","components/PageHeader.js","components/Home.js","components/TimeLeft.js","components/FreeTimeRandom.js","components/Container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","react_default","a","createElement","Navbar","Nav","className","lib","to","Link","style","marginLeft","Component","HeaderLeft","xmlns","height","width","background","x","y","d","transform","HeaderRight","Header_HeaderLeft","Brand","href","margin","padding","fontWeight","src","Logo","alt","maxWidth","Header_HeaderRight","Home","TimeLeft","FreeTimeRandom","Container","Switch","Route","path","exact","component","PageHeader","App","BrowserRouter","NavigationBar_Navigation","Container_Container","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65e326a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.88714a27.gif\";","import React,{Component} from 'react';\r\nimport {Navbar,Nav} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\n\r\nexport default class Navigation extends Component{\r\n    render(){\r\n        return(\r\n          <div>\r\n            <Navbar>\r\n               <Nav className=\"mr-auto\">\r\n                    <LinkContainer to=\"/\"><Nav.Link style={{marginLeft:\"0.7em\"}}>Â¤</Nav.Link></LinkContainer>\r\n                    <LinkContainer to=\"\"><Nav.Link>Home</Nav.Link></LinkContainer>\r\n                    <LinkContainer to=\"time-left\"><Nav.Link>Time Left</Nav.Link></LinkContainer>\r\n                    <LinkContainer to=\"what-to-do\"><Nav.Link>What to Do</Nav.Link></LinkContainer>\r\n               </Nav>\r\n            </Navbar>\r\n          </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport const HeaderLeft = () => {\r\n    return(<svg xmlns=\"http://www.w3.org/2000/svg\" style={{height:22, width:'100%',background:'white'}}>\r\n        <title>Macintosh Header</title>\r\n        <rect x=\"50\" y=\"20\" width=\"900\" height=\"2\" />\r\n        <rect y=\"20\" width=\"24\" height=\"2\" />\r\n        <rect x=\"50\" y=\"16\" width=\"900\" height=\"2\" />\r\n        <rect y=\"16\" width=\"24\" height=\"2\" />\r\n        <rect x=\"50\" y=\"12\" width=\"900\" height=\"2\" />\r\n        <rect y=\"12\" width=\"24\" height=\"2\" />\r\n        <rect x=\"50\" y=\"8\" width=\"900\" height=\"2\" />\r\n        <rect y=\"8\" width=\"24\" height=\"2\" />\r\n        <rect x=\"50\" y=\"4\" width=\"900\" height=\"2\" />\r\n        <rect y=\"4\" width=\"24\" height=\"2\" />\r\n        <rect x=\"50\" width=\"900\" height=\"2\" />\r\n        <rect width=\"24\" height=\"2\" />\r\n        <path d=\"M14,0\r\n        V22H36V0ZM34,\r\n        20H16V2H34Z\" transform=\"translate(12 0)\" />\r\n    </svg>);\r\n}\r\n\r\nexport const HeaderRight = () => {\r\n    return(<svg xmlns=\"http://www.w3.org/2000/svg\"  style={{height:22,width:'100%', background:'white'}}>\r\n        <title>Macintosh Header</title>\r\n        <rect y=\"20\" width=\"100%\" height=\"2\" />\r\n        <rect y=\"16\" width=\"100%\" height=\"2\" />\r\n        <rect y=\"12\" width=\"100%\" height=\"2\" />\r\n        <rect y=\"8\" width=\"100%\" height=\"2\" />\r\n        <rect y=\"4\" width=\"100%\" height=\"2\" />\r\n        <rect y=\"0\" width=\"100%\" height=\"2\" />\r\n    </svg>);\r\n}","import React,{Component} from 'react';\r\nimport {Navbar,Col,Row} from 'react-bootstrap';\r\nimport Logo from '../assets/loading.gif';\r\nimport {HeaderLeft,HeaderRight} from '../assets/Header.js';\r\n\r\nexport default class Navigation extends Component{\r\n    render(){\r\n        return(\r\n          <div>\r\n            <Navbar>\r\n              <HeaderLeft/>\r\n              <Navbar.Brand href=\"/\" style={{margin:'1px 1vw 1px 1vw',width:'3em',padding:0,fontWeight:'bold', background:'white'}}>\r\n                <img src={Logo} alt=\"Hourglass\" style={{maxWidth:'100%',height:'auto', background:'white'}}/>\r\n              </Navbar.Brand>\r\n              <HeaderRight/>\r\n            </Navbar>\r\n                {/* <Row className=\"nav-row\" style={{width:'100%',margin:'-2px 0px 0px 0px', border:'2px solid black'}}>\r\n                  <Col><span>3 items</span></Col>\r\n                  <Col className=\"text-center\"><span>211K in folder</span></Col>\r\n                  <Col style={{textAlign: 'right'}}><span>177K available</span></Col>\r\n                </Row> */}\r\n          </div>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\n\r\nexport default class Home extends Component{\r\n    render(){\r\n        return(\r\n            <h1>Home</h1>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\n\r\nexport default class TimeLeft extends Component{\r\n    render(){\r\n        return(\r\n            <h1>How much time do you have left?</h1>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\n\r\nexport default class FreeTimeRandom extends Component{\r\n    render(){\r\n        return(\r\n            <h1>RANDOM!</h1>\r\n        )\r\n    }\r\n}","import React,{Component} from 'react';\r\nimport {Route,Switch} from 'react-router-dom';\r\nimport PageHeader from './PageHeader';\r\nimport Home from './Home';\r\nimport TimeLeft from './TimeLeft';\r\nimport FreeTimeRandom from './FreeTimeRandom';\r\n\r\nexport default class Container extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home}/>\r\n                    <Route component = {PageHeader}/>\r\n                </Switch>\r\n                <Route path=\"/time-left\" component={TimeLeft}/>\r\n                <Route path=\"/what-to-do\" component={FreeTimeRandom}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport './App.scss';\nimport NavBar from './components/NavigationBar';\nimport {BrowserRouter} from 'react-router-dom';\nimport Container from './components/Container';\n\nclass App extends Component {\n  render() {\n    return (\n      < BrowserRouter >\n        <div className=\"App\">\n          <NavBar/>\n          <Container/>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}